{"version":3,"sources":["components/Note.js","services/notes.js","i18n/index.js","components/Togglable.js","services/login.js","components/Notification.js","components/LoginForm.js","components/NoteForm.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","token","axios","get","then","res","data","newObject","config","headers","Authorization","post","response","id","put","newToken","CANCEL_BUTTON","Togglable","forwardRef","ref","children","buttonLabel","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","i18n","displayName","login","credentials","a","Notification","message","LoginForm","handleChangeUser","username","setUsername","password","setPassword","errorMessage","setErrorMessage","handleSubmit","event","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","noteService","setTimeout","onSubmit","type","value","name","placeholder","onChange","e","target","NoteForm","addNote","handleLogout","newNote","setNewNote","togglableRef","useRef","current","App","notes","setNotes","showAll","setShowAll","setUser","useEffect","initialNotes","loggedUserJSON","getItem","parse","notesToShow","filter","noteObject","returnedNote","concat","removeItem","map","i","key","find","n","changedNote","catch","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6775fae3.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important'\n    : 'make important';\n\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import axios from 'axios';\nconst baseUrl = '/api/notes';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `Bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(res => res.data);\n};\n\nconst create = (newObject) => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n\n  const request = axios.post(baseUrl, newObject, config);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n\n  const request = axios.put(`${baseUrl}/${id}`, newObject, config);\n  return request.then(response => response.data);\n};\n\nexport default { getAll, create, update, setToken };\n","export default {\n  TOGGABLE: {\n    CANCEL_BUTTON: 'Exit'\n  }\n};\n","import React, { forwardRef, useImperativeHandle, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '../i18n/index';\n\nconst Togglable = forwardRef(({ children, buttonLabel = 'show' }, ref) => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? 'none' : '' };\n  const showWhenVisible = { display: visible ? '' : 'none' };\n\n  const toggleVisibility = () => setVisible(!visible);\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    };\n  });\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{buttonLabel}</button>\n      </div>\n\n      <div style={showWhenVisible}>\n        {children}\n        <button onClick={toggleVisibility}>\n          {i18n.TOGGABLE.CANCEL_BUTTON}\n        </button>\n      </div>\n\n    </div>\n  );\n});\n\nTogglable.displayName = 'Togglable';\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string\n};\n\nexport default Togglable;\n","import axios from 'axios';\n\nconst baseUrl = '/api/login';\n\nconst login = async credentials => {\n  const { data } = await axios.post(baseUrl, credentials);\n  return data;\n};\n\nexport default { login };\n","import React from 'react';\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return (\n    <div className='error'>\n      {message}\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { useState } from 'react';\nimport Togglable from './Togglable.js';\nimport loginService from '../services/login';\nimport noteService from '../services/notes';\nimport Notification from './Notification';\n\nexport default function LoginForm ({ handleChangeUser }) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n\n      window.localStorage.setItem(\n        'loggedNoteAppUser', JSON.stringify(user)\n      );\n\n      noteService.setToken(user.token);\n\n      handleChangeUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (e) {\n      setErrorMessage('Wrong credentials');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  return (\n    <Togglable buttonLabel='Show Login'>\n      <Notification message={errorMessage} />\n      <form onSubmit={handleSubmit}>\n        <div>\n          <input\n            type='text'\n            value={username}\n            name='Username'\n            placeholder='Username'\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </div>\n        <div>\n          <input\n            type='password'\n            value={password}\n            name='Password'\n            placeholder='Password'\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <button id='form-login-button'>\n          Login\n        </button>\n      </form>\n    </Togglable>\n  );\n}\n","import React, { useRef, useState } from 'react';\nimport Togglable from './Togglable.js';\n\nexport default function NoteForm ({ addNote, handleLogout }) {\n  const [newNote, setNewNote] = useState('');\n  const togglableRef = useRef();\n\n  const handleChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const noteObject = {\n      content: newNote,\n      important: false\n    };\n\n    addNote(noteObject);\n    setNewNote('');\n    togglableRef.current.toggleVisibility();\n  };\n\n  return (\n    <Togglable buttonLabel='Show Create Note' ref={togglableRef}>\n      <h3>Create a new note</h3>\n\n      <form onSubmit={handleSubmit}>\n        <input\n          placeholder='Write your note content'\n          value={newNote}\n          onChange={handleChange}\n        />\n        <button type='submit'>save</button>\n      </form>\n      <div>\n        <button onClick={handleLogout}>\n          Logout\n        </button>\n      </div>\n    </Togglable>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes';\n\nimport LoginForm from './components/LoginForm.js';\nimport NoteForm from './components/NoteForm.js';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes);\n      });\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteAppUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      noteService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogout = () => {\n    setUser(null);\n    noteService.setToken(null);\n    window.localStorage.removeItem('loggedNoteAppUser');\n  };\n\n  const addNote = (noteObject) => {\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote));\n      });\n  };\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n      })\n      .catch(() => {\n        setErrorMessage(`Note '${note.content}' was already removed from server`);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      });\n  };\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n\n      {\n        user\n          ? <NoteForm\n              addNote={addNote}\n              handleLogout={handleLogout}\n            />\n          : <LoginForm handleChangeUser={setUser} />\n      }\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) =>\n          <Note\n            key={i}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      <span>{errorMessage}</span>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}